package code {		// generates and solves the grid		public class Solver {		public var game:Game;		public function Solver(aGame:Game) {			// constructor code			game = aGame;		}				public function setUpGrid():Array{			var gameGrid = new Array(Constants.GRID_WIDTH); // create rows						for(var i:int = 0; i < Constants.GRID_WIDTH; i++){ // step through rows				gameGrid[i] = new Array(Constants.GRID_HEIGHT); // add columns to each row				for(var j:int=0; j < Constants.GRID_HEIGHT; j++){ // step through columns					var aPath = new Path(game); // create empty square					aPath.x = i*Constants.TILESIZE_X; // set proper x coordinate					aPath.y = j*Constants.TILESIZE_Y; // set proper y coordinate					gameGrid[i][j] = aPath; // add tile to the grid					//game.doc.addChild(aPath); // add tile to the document					// trace(i + " " + j + " generated"); // trace out location				}			}						return gameGrid;		}				public function populateGrid(aGrid:Array){			// temp code			var playerSet:Boolean=false;			var goalSet:Boolean=false;			var setPiece:Boolean=true;			for(var i:int = 0; i < aGrid.length; i++){				for(var j:int = 0; j < aGrid[i].length; j++){					setPiece=true;					var num:int = Math.random()*Constants.TILE_TYPES;					//trace(num);					switch(num){						case 0: if(playerSet){								setPiece=false;							}else{								aGrid[i][j] = new Player(game);								playerSet=true;							}							break;						case 1: if(goalSet){								setPiece=false;							}else{								aGrid[i][j] = new Goal(game);								goalSet=true;							}							break;						case 2: aGrid[i][j] = new Treasure(game);							break;						case 3:						case 4:						case 5:						case 6:						case 7:						case 8:						case 9:						case 10:						case 11:						case 12: aGrid[i][j] = new Wall(game);							break;						default: aGrid[i][j] = new Path(game);							break;					}					if(setPiece){						aGrid[i][j].x = i*Constants.TILESIZE_X;						aGrid[i][j].y = j*Constants.TILESIZE_Y;						game.doc.addChild(aGrid[i][j]);						//trace(i + " " + j + " is " + aGrid[i][j]);					}					else{						j--;					}				}			}			//		}	}	}